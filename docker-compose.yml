version: '3'

services:
  adminer:
    image: adminer:latest
    restart: on-failure
    ports:
      - 8080:8080
    networks:
      - default
      - postgres

  db:
    container_name: th_db
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tastehealthy
      POSTGRES_DB: tastehealthy
    ports:
      - 3306:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - default
      - postgres

  api:
    container_name: th_api
    restart: on-failure
    image: node:8
    build:
      context: .
      dockerfile: ./server/Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    ports:
      - '3000:3000'
    networks:
      - default
      - postgres
    command: ['node', '/api/server/build/server.js']

  # nginx:
  #   container_name: th_nginx
  #   image: nginx:latest
  #   volumes_from:
  #     - client
  #   volumes:
  #     - ./client/nginx.conf:/etc/nginx/nginx.conf:ro
  #   networks:
  #     - default
  #     # - web
  # client:
  #   container_name: th_client
  #   restart: on-failure
  #   build:
  #     context: './client'
  #     dockerfile: Dockerfile
  #   environment:
  #     - NODE_ENV=production

volumes:
  db_data:

networks:
  # web:
  #   external: true
  postgres: {}
